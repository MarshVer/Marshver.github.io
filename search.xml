<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>word使用技巧</title>
      <link href="/2022/08/20/word-shi-yong-ji-qiao/"/>
      <url>/2022/08/20/word-shi-yong-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h1 id="在正方形里打勾"><a href="#在正方形里打勾" class="headerlink" title="在正方形里打勾"></a>在正方形里打勾</h1><p>输入2611，全选ALT+x即可出现打勾的正方形</p><h1 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h1><ul><li>上标：ctrl、shift、+</li><li>下标：ctrl、+</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请免费域名并绑定Cloudflare</title>
      <link href="/2022/08/19/shen-qing-mian-fei-yu-ming/"/>
      <url>/2022/08/19/shen-qing-mian-fei-yu-ming/</url>
      
        <content type="html"><![CDATA[<p>注：这种方法申请的域名无法备案。</p><h1 id="一、注册并申请域名"><a href="#一、注册并申请域名" class="headerlink" title="一、注册并申请域名"></a>一、注册并申请域名</h1><ol><li>进入官网：<a href="https://nic.eu.org/">https://nic.eu.org/</a> </li><li>注册账号：注册账号最好用谷歌邮箱，且注册账号需要大概一天的审核时间，审核成功的邮件在谷歌邮箱的<strong>垃圾邮件</strong>里。</li><li>登陆账号，点击new domain<br>第一个信息填入你的域名地址，带.eu.org（如marshver.eu.org）<br>后面信息按要求填写<br>Check for correctness of:选择第一个<br>最后一类表格：先去阿里云DNSpod注册登录：<a href="https://www.dnspod.cn/login">https://www.dnspod.cn/login</a><br>左侧DNS解析我的域名-添加域名-填入你注册的域名-一直确定，将下面两个DNS服务器复制输入即可<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/19/qIjnzVX5JNx8EBG.png"><br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/19/oMWZNxlDwygGuK9.png"><br>我这个是转移到CF后填写的DNS服务器，必须得先用腾讯云绑定后才能转移到CF。</li><li>submit提交<br>申请域名大概需要2-15天的时间，邮件依然在<strong>垃圾邮件</strong>里，注意查收</li></ol><h1 id="二、绑定Cloudflare"><a href="#二、绑定Cloudflare" class="headerlink" title="二、绑定Cloudflare"></a>二、绑定Cloudflare</h1><ol><li>进入Cloudflare：<a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a> 注册登录</li><li>add a site添加你的域名</li><li>使用免费服务，过程中会遇到一个替换DNS服务商的流程，去申请域名的网站，将CF的两个DNS服务商替换掉原来的腾讯云的并提交即可（如一中的第二张图所示）</li><li>CF成功大概需要一个小时</li></ol><h1 id="三、Vercel自定义域名并启用CF的CDN加速"><a href="#三、Vercel自定义域名并启用CF的CDN加速" class="headerlink" title="三、Vercel自定义域名并启用CF的CDN加速"></a>三、Vercel自定义域名并启用CF的CDN加速</h1><ol><li>进入你的Vercel，点击你的博客文件</li><li>点击右侧View Domains，添加你的域名</li><li>2步会生成两条信息，去CF添加下面两条信息即可</li><li>CF左侧DNS，按Vercel的要求填写即可（注意取消Proxy status，显示DNS only）：<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/19/ZlMGk968xwU1jsD.png"></li></ol><p>以后就可以直接用你的域名访问了，可以加www也可以不加（vercel默认不加www会转向www，可在vercel里设置不转），cmd中ping两个网址显示不加www网速会快一点。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux学习笔记</title>
      <link href="/2022/08/17/linux-xue-xi-bi-ji/"/>
      <url>/2022/08/17/linux-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="一、下载VMware和Centos"><a href="#一、下载VMware和Centos" class="headerlink" title="一、下载VMware和Centos"></a>一、下载VMware和Centos</h1><blockquote><p>VMware16：<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></p><blockquote><p>VMware16密钥：<br>ZF3R0-FHED2-M80TY-8QYGC-NPKYF<br>YF390-0HF8P-M81RQ-2DXQE-M2UT6<br>ZF71R-DMX85-08DQY-8YMNC-PPHV8</p></blockquote></blockquote><p>Centos7-DVD：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/">http://mirrors.aliyun.com/centos/7/isos/x86_64/</a></p><h1 id="二、创建虚拟机并导入Centos"><a href="#二、创建虚拟机并导入Centos" class="headerlink" title="二、创建虚拟机并导入Centos"></a>二、创建虚拟机并导入Centos</h1><ol><li><p>典型-稍后安装操作系统</p></li><li><p>选择客户机操作系统为红帽7：<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/17/RoBmZ4x6Qg7I3yf.png"></p></li><li><p>命名虚拟机名称-选择安装位置-20G、拆分成多个文件-自定义硬件</p></li><li><p>自定义硬件只需根据自己的CPU选择合适的处理器数量和内核数量就行</p></li></ol><p>打开任务管理器-性能，选择资源监视器：<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/17/zGWJsqkhVciKAQa.png"></p><p>处理器全给，核数给一半：<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/17/o4O1PKuCMbgFzIS.png"></p><ol start="5"><li><p>最后编辑虚拟机设置，将CD&#x2F;DVD指向ISO映像文件：<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/17/8mqIZHfFgWLoYeR.png"></p></li><li><p>打开虚拟机install Centos，选择简体中文，选择软件选择：<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/17/6fBGa43RsV2vC9K.png"></p></li><li><p>选择安装目标位置，我要配置分区。<br>一般将linux分成三个区：&#x2F;boot分区（引导分区），swap分区（交换分区），&#x2F;（根分区）<br>&#x2F;boot：1G；swap：与运存大小一致，2G；根分区（&#x2F;）：剩余内存，17G<br>设备类型：标准分区<br>文件系统选择：ext4，swap，ext4</p></li><li><p>KDUMP实际运行开启，学习可关闭节约内存</p></li><li><p>选择网络和主机名，启用并修改主机名即可完成</p></li><li><p>开始安装，设置root密码（实际密码应较为复杂为好：<a href="https://suijimimashengcheng.bmcx.com/">https://suijimimashengcheng.bmcx.com/</a> ）并创建用户</p></li></ol><h1 id="三、网络连接的三种模式"><a href="#三、网络连接的三种模式" class="headerlink" title="三、网络连接的三种模式"></a>三、网络连接的三种模式</h1><ol><li>桥接模式：虚拟机网络地址和主机属于同一网段，可以与外部系统通讯，但是容易造成IP冲突</li><li><strong>NAT模式</strong>：网络地址转换，可以与外部系统通讯（以主机地址为代理发送和接受信息），不容易造成IP冲突</li><li>主机模式：独立系统，不予外部系统通讯</li></ol><h1 id="四、安装vmtools"><a href="#四、安装vmtools" class="headerlink" title="四、安装vmtools"></a>四、安装vmtools</h1><p>VMtools通过主机建立文件夹再用虚拟机的共享文件夹与其链接，实现主机和虚拟机系统的共享操作。</p><ol><li>进入centos（root登录）</li><li>虚拟机菜单重新安装vmtools</li><li>打开光驱文件复制压缩包到<strong>主文件夹-其他位置-计算机-opt</strong>文件下</li><li>使用解压命令 tar，得到一个安装文件<br>cd &#x2F;opt (进入opt目录)<br>tar -zxvf VMwareTools-10.3.23-16594550.tar.gz(解压文件，可输入tar -zxvf VM+tab快速识别文件名，下面的操作同理，需要注意大小写)</li><li>进入VM解压的目录<br>cd vmware-tools-distrib&#x2F;<br>ls</li><li>安装VMstolls<br>.&#x2F;vmware-install.pl<br>一直确定即可</li><li>主机建立文件夹（myshare），虚拟机系统设置-选项，启用共享文件夹并设置位置为myshare的位置，myshare将出现在<strong>主文件夹-其他位置-计算机-mnt-hgfs</strong>的文件夹里</li></ol><h1 id="五、linux目录结构"><a href="#五、linux目录结构" class="headerlink" title="五、linux目录结构"></a>五、linux目录结构</h1><p>linux一切皆文件</p><table><thead><tr><th>文件名</th><th>存放的内容</th></tr></thead><tbody><tr><td><strong>&#x2F;bin</strong>（&#x2F;usr&#x2F;bin,&#x2F;usr&#x2F;local&#x2F;bin）</td><td>经常使用的指令（binary）</td></tr><tr><td><strong>&#x2F;sbin</strong> (&#x2F;usr&#x2F;sbin,&#x2F;usr&#x2F;local&#x2F;sbin)</td><td>系统管理员使用的指令（super binary）</td></tr><tr><td><strong>&#x2F;home</strong></td><td>存放普通用户的主目录，目录名是用户的账号名</td></tr><tr><td><strong>&#x2F;root</strong></td><td>系统管理员的用户主目录</td></tr><tr><td><strong>&#x2F;etc</strong></td><td>系统管理所需要的配置文件和子目录my.conf</td></tr><tr><td><strong>&#x2F;usr</strong></td><td>用户的很多应用程序和文件都放在这个目录下，类似于Windows下的program files目录</td></tr><tr><td><strong>&#x2F;boot</strong></td><td>linux系统启动的核心文件，包括链接文件和镜像文件</td></tr><tr><td><strong>&#x2F;media</strong></td><td>linux自动识别一些设备，例如U盘，光驱等，当识别后，linux会把识别的设备挂载到这个目录下</td></tr><tr><td><strong>&#x2F;mnt</strong></td><td>系统提供该目录为了让用户临时挂载别的文件系统，我们可以将外露的存储挂载在&#x2F;,mt&#x2F;上，然后进入该目录就可以查看里的内容了。d:&#x2F;myshar</td></tr><tr><td><strong>&#x2F;usr&#x2F;local</strong></td><td>给主机额外安装软件所安装的目录，一般通过编译源码方式安装的程序</td></tr><tr><td><strong>&#x2F;var</strong></td><td>存放着不断扩充者的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件</td></tr><tr><td>&#x2F;opt</td><td>给之际额外<strong>安装软件</strong>所摆放的目录，默认为空（安装包）</td></tr><tr><td>&#x2F;lib</td><td>系统开机所需的最基本的动态连接共享库，作用类似于Windows里的DLL文件，几乎所有的应用程序都需要这些共享库</td></tr><tr><td>&#x2F;lost+found</td><td>一般情况下是空的，系统非法关机后会生成一些文件</td></tr><tr><td>&#x2F;tmp</td><td>存放临时文件</td></tr><tr><td>&#x2F;dev</td><td>类似于windows的设备管理器，把所有硬件用文件的形式存储</td></tr><tr><td>&#x2F;selinux</td><td>[security-enhanced linux]安全子系统，它能控制程序只能访问特定文件，有三种工作模式，可以自行设置</td></tr><tr><td><em>&#x2F;proc（不能动）</em></td><td>虚拟的目录，存放系统内存的映射，访问这个目录获取系统信息</td></tr><tr><td><em>&#x2F;srv（不能动）</em></td><td>服务启动之后需要提取的数据</td></tr><tr><td><em>&#x2F;sys（不能动）</em></td><td>这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统sysfs</td></tr></tbody></table><h1 id="六、远程登陆linux和传送文件"><a href="#六、远程登陆linux和传送文件" class="headerlink" title="六、远程登陆linux和传送文件"></a>六、远程登陆linux和传送文件</h1><h2 id="1-下载Xshell和Xftp"><a href="#1-下载Xshell和Xftp" class="headerlink" title="1.下载Xshell和Xftp"></a>1.下载Xshell和Xftp</h2><p>官网：<a href="https://www.xshell.com/zh/free-for-home-school/">https://www.xshell.com/zh/free-for-home-school/</a> 下载两者<br>百度网盘下载链接：<a href="https://pan.baidu.com/s/1t-XCh7OYZhPgYX1GHQJanA?pwd=1111">https://pan.baidu.com/s/1t-XCh7OYZhPgYX1GHQJanA?pwd=1111</a> </p><h2 id="2-查询linux系统ip地址"><a href="#2-查询linux系统ip地址" class="headerlink" title="2.查询linux系统ip地址"></a>2.查询linux系统ip地址</h2><p>进入linux终端，输入ifconfig<br>ens33中的inet后面的就是IP地址，如：192.168.232.128</p><h2 id="3-远程登录linux"><a href="#3-远程登录linux" class="headerlink" title="3.远程登录linux"></a>3.远程登录linux</h2><ol><li>打开Xshell</li><li>新建，名称随意，协议是ssh，主机设为IP地址，端口22-确定</li><li>双击会话，接受并保存，输入root和密码</li></ol><h2 id="4-建立文件传输"><a href="#4-建立文件传输" class="headerlink" title="4.建立文件传输"></a>4.建立文件传输</h2><ol><li>打开Xftp</li><li>如3类似新建，协议是SFTP，端口22</li><li>双击会话，输入root和密码</li><li>如文件出现乱码，选择左上角&gt;文件&gt;当前会话属性&gt;选项&gt;编码换成utf-8</li><li>Xftp左大块是windows文件，又大块是linux文件</li></ol><h1 id="七、Vi和Vim"><a href="#七、Vi和Vim" class="headerlink" title="七、Vi和Vim"></a>七、Vi和Vim</h1><h2 id="1-Vi和Vim常用的三种模式"><a href="#1-Vi和Vim常用的三种模式" class="headerlink" title="1.Vi和Vim常用的三种模式"></a>1.Vi和Vim常用的三种模式</h2><p>终端vim+文件名（如hello.java）进入vim编辑。</p><ul><li>正常模式（默认）<br>[上下左右]移动光标，[删除字符]或[删除整行]处理文档，[复制、粘贴]处理数据</li><li>插入模式<br>按下i&#x2F;I、o&#x2F;O、a&#x2F;A、r&#x2F;R等任何一个字母进入<strong>编辑模式</strong>，一般按<strong>i</strong>（insert）即可</li><li>命令行模式<br>输入ESC，再输入“:”，这个模式提供你相关指令，完成读取、存盘、替换、离开vim、显示行号等的动作。</li></ul><p>命令行模式三种退出方式：</p><ol><li>:wq(保存退出)</li><li>:q(退出不保存)</li><li>:q!(强制退出，不保存)</li></ol><h2 id="2-Vi和Vim常用的快捷键"><a href="#2-Vi和Vim常用的快捷键" class="headerlink" title="2.Vi和Vim常用的快捷键"></a>2.Vi和Vim常用的快捷键</h2><ul><li>拷贝当前行(yy)；拷贝当前向下3行(3yy)；粘贴(p)</li><li>删除当前行(dd)；删除当前向下3行(3dd)</li><li>查找某个单词[<strong>命令行下</strong> &#x2F;关键字]，回车查找，输入n是查找下一个</li><li>显示&#x2F;撤销行号[命令行下 :set nu&#x2F;nonu]</li><li>编辑文件，使用快捷键到该文档的最末行(G)和最首行(gg)</li><li>撤销动作(u)</li><li>编辑文件。将光标移动到20行(20+shift+g)</li><li>…更多的可以查看文档</li></ul><h1 id="八、一些指令"><a href="#八、一些指令" class="headerlink" title="八、一些指令"></a>八、一些指令</h1><h2 id="关机和重启命令"><a href="#关机和重启命令" class="headerlink" title="关机和重启命令"></a>关机和重启命令</h2><table><thead><tr><th align="center">指令</th><th align="center">指令说明</th></tr></thead><tbody><tr><td align="center">shutdown -h now</td><td align="center">立刻关机</td></tr><tr><td align="center">shutdown -h 1</td><td align="center">1分钟后关机</td></tr><tr><td align="center">shutdown</td><td align="center">默认1分钟后关机</td></tr><tr><td align="center">shutdown -r now</td><td align="center">立即重启</td></tr><tr><td align="center">halt</td><td align="center">立即关机</td></tr><tr><td align="center">reboot</td><td align="center">立即重启</td></tr><tr><td align="center">sync</td><td align="center">内存数据同步到磁盘</td></tr></tbody></table><p>注：</p><ul><li>重启和关机前，首先要运行sync，把内存同步到磁盘</li><li>目前的重启和关机指令已经在关机前进行了sync，但最好还是要运行一次sync</li></ul><h2 id="用户登录和注销"><a href="#用户登录和注销" class="headerlink" title="用户登录和注销"></a>用户登录和注销</h2><ul><li>尽量少用root登录，普通用户输入“<strong>su - root</strong>”切换到root用户，或者“<strong>su - 用户名</strong>”切换到其他用户(切换用户后可用logout返回原来的用户)</li><li>提示符下输入logout即可注销用户</li></ul><p>注：</p><ul><li>logout注销指令在图形运行级别无效，在 运行级别3下有效</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习笔记</title>
      <link href="/2022/08/07/css-xue-xi-bi-ji/"/>
      <url>/2022/08/07/css-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>CSS是层叠样式表的简称，主要用于设置HTML页面中的文本内容，图片的外形以及版面的布局和外观显示样式。</p><p>注：Alt+Shift+F快速格式化文档，实现代码格式自动调整。</p><h1 id="一、CSS语法规范"><a href="#一、CSS语法规范" class="headerlink" title="一、CSS语法规范"></a>一、CSS语法规范</h1><p>CSS规则由两个主要的部分构成：选择器以及一条或多条声明</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>      <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>       <span class="token property">font-size</span><span class="token punctuation">:</span> 25px    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经常写在head标签中新建的style中，属性用；结尾。<br>属性+属性名成为“键值对”。</p><h1 id="二、CSS选择器"><a href="#二、CSS选择器" class="headerlink" title="二、CSS选择器"></a>二、CSS选择器</h1><p>选择器的作用：选择需要修改的标签。<br>选择器分为基础选择器和复合选择器。<br>基础选择器由单个选择器组成，包括：标签选择器，类选择器，id选择器和通配符选择器。</p><h2 id="1-标签选择器"><a href="#1-标签选择器" class="headerlink" title="1.标签选择器"></a>1.标签选择器</h2><p>以html标签名为选择器，<strong>全选</strong><br>不能差异化样式。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">    h1 &#123;      color: red;       font-size: 25px&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-类选择器-重点"><a href="#2-类选择器-重点" class="headerlink" title="2.类选择器(重点)"></a>2.类选择器(重点)</h2><p>类选择器可以单独选择一个或某几个标签<br>html元素以<strong>class属性</strong>来设置id选择器，CSS中id选择器以“**.**”来定义</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">.类名 &#123;    属性1: 属性值1;    ...&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>类名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>单类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在需要修改属性的标签写上class类&#x3D;类名即可选择性修改。<br>一个标签可以指定多个类名，用空格隔开(在同一个class属性里)。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>类1 类2 类3 ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>多类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-id选择器"><a href="#3-id选择器" class="headerlink" title="3.id选择器"></a>3.id选择器</h2><p>html元素以<strong>id属性</strong>来设置id选择器，CSS中id选择器以<strong>“#”</strong>来定义，<strong>id选择器只能被调用一次</strong>。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">#id名 &#123;    属性1: 属性值1;    ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-通配符选择器"><a href="#4-通配符选择器" class="headerlink" title="4.通配符选择器"></a>4.通配符选择器</h2><p>使用<strong>“*”</strong>定义，它表示选中页面中的所有元素。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">* &#123;    属性1: 属性值1;    ..&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>特殊情况下才使用</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">* &#123;    margin: 0;<span class="token comment">&lt;!-- 内边距 --></span>    padding: 0;<span class="token comment">&lt;!-- 外边距 --></span>&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、CSS字体属性"><a href="#三、CSS字体属性" class="headerlink" title="三、CSS字体属性"></a>三、CSS字体属性</h1><p>CSS Fonts(字体)属性用于定义字体类型、大小、粗细和文本样式（斜体等）。</p><h2 id="1-字体类型"><a href="#1-字体类型" class="headerlink" title="1.字体类型"></a>1.字体类型</h2><p>font-family：字体类型</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">p &#123; font-family: "微软雅黑";&#125;div &#123;font-family: Arial, "Microsoft YaHei", "微软雅黑";&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>为了兼容建议使用英文。<br>多字体用逗号隔开，从左向右优先级递减，若电脑一个字体都没有，将使用浏览器默认字体。</p><h2 id="2-字体大小"><a href="#2-字体大小" class="headerlink" title="2.字体大小"></a>2.字体大小</h2><p>font-size： 字体大小</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">p &#123;font-size: 20px&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将P改为body指定所有字体大小（除了标题字体，标题字体需要单独设置）。</p><h2 id="3-字体粗细"><a href="#3-字体粗细" class="headerlink" title="3.字体粗细"></a>3.字体粗细</h2><p>font-weight：数字<br>实际开发更提倡使用数字表示字体的粗细。<br>也可使用下列属性名：</p><ul><li>normal：默认正常的字体（400）</li><li>bold：加粗（700）</li><li>bolder：特粗体</li><li>lighter：细体</li><li>number：数字表示粗细</li></ul><h2 id="4-文字样式"><a href="#4-文字样式" class="headerlink" title="4.文字样式"></a>4.文字样式</h2><p>font-style：属性名<br>主要使用以下属性：</p><ul><li>normal：默认值</li><li>italic：斜体</li></ul><p>很少将字体改倾斜，一般将&lt;em, i&gt;改为不倾斜字体</p><h2 id="5-字体复合属性"><a href="#5-字体复合属性" class="headerlink" title="5.字体复合属性"></a>5.字体复合属性</h2><p>使用字体复合属性可以节约代码。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">div &#123;    font-style: italic;    font-weight: 700;    font-size: 16px;    font-family: "Microsoft Yahei";    font: italic 700 16px/ "Microsoft Yahei"&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>复合属性可以将字体属性值直接写在font中，但有严格的<strong>顺序</strong>：font：font-style font-weight font-size&#x2F;line-height font-family<br>即代码块中最后一行代码表示上面所有属性的复合，如果不想要某个属性可以不设置，但最后两个属性值必须填，否则设置无效。</p><h1 id="四、文本属性"><a href="#四、文本属性" class="headerlink" title="四、文本属性"></a>四、文本属性</h1><p>CSS Text(文本)属性可定义文本的外观，比如：颜色、对齐文本、装饰文本、文本缩进、行间距等。</p><h2 id="1-文本颜色"><a href="#1-文本颜色" class="headerlink" title="1.文本颜色"></a>1.文本颜色</h2><p>color属性定义颜色。</p><table><thead><tr><th>表示方式</th><th>属性值</th></tr></thead><tbody><tr><td>预定义颜色值</td><td>red、blue、green、pink</td></tr><tr><td>十六进制</td><td>#FF0000、#FF6600</td></tr><tr><td>RGB代码</td><td>rgb(255,0,0)或rgb(100%,0%,0%)</td></tr></tbody></table><p>开发常用PS吸管工具吸取十六进制颜色属性。</p><h2 id="2-对齐文本"><a href="#2-对齐文本" class="headerlink" title="2.对齐文本"></a>2.对齐文本</h2><p>text-align属性设置<strong>水平</strong>对齐方式</p><table><thead><tr><th>属性值</th><th>解释</th></tr></thead><tbody><tr><td>left</td><td>左对齐</td></tr><tr><td>right</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><h2 id="3-装饰文本"><a href="#3-装饰文本" class="headerlink" title="3.装饰文本"></a>3.装饰文本</h2><p>text-decoration属性添加下划线、删除线、上划线等。</p><table><thead><tr><th>属性值</th><th>解释</th></tr></thead><tbody><tr><td>none</td><td>默认，没有线</td></tr><tr><td>underline</td><td>下划线</td></tr><tr><td>overline</td><td>上划线</td></tr><tr><td>line-through</td><td>删除线</td></tr></tbody></table><p>none常用于去除&lt;a&gt;链接的下划线。</p><h2 id="4-文本缩进"><a href="#4-文本缩进" class="headerlink" title="4.文本缩进"></a>4.文本缩进</h2><p>text-indent属性指定文本的第一行的缩进。<br>属性值可以是：</p><ul><li>像素值，如 20px</li><li>当前文字大小：如 2em</li></ul><p>em：相对于当前文字的文字大小。</p><h2 id="5-行间距"><a href="#5-行间距" class="headerlink" title="5.行间距"></a>5.行间距</h2><p>line-height：像素值 px</p><h1 id="五、CSS的引入方式"><a href="#五、CSS的引入方式" class="headerlink" title="五、CSS的引入方式"></a>五、CSS的引入方式</h1><p>按照CSS样式书写的位置或引入方式，CSS可以分为三大类：</p><ol><li>行内样式表（行内式）</li><li>内部样式表（嵌入式）</li><li>外部样式表（链接式）</li></ol><h2 id="1-内部样式表"><a href="#1-内部样式表" class="headerlink" title="1.内部样式表"></a>1.内部样式表</h2><p>写道html页面内部、将所有的CSS代码抽取出来单独放到一个&lt;style&gt;标签中,不一定放到head里，理论上可以放到任意位置。</p><h2 id="2-行内样式表"><a href="#2-行内样式表" class="headerlink" title="2.行内样式表"></a>2.行内样式表</h2><p>在元素标签内部的style属性中设定CSS样式，适合修改简单模式</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>行内样式表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-外部样式表"><a href="#3-外部样式表" class="headerlink" title="3.外部样式表"></a>3.外部样式表</h2><p>实施开发都是外部样式表，适合样式比较多的情况。核心是将样式单独写到CSS文件中，之后把CSS文件引入到HTML页面中使用。</p><ol><li>新建CSS文件，将所有CSS代码放入此文件</li><li>在HTML中，head里用&lt;link&gt;标签引入这个文件<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CSS文件路径<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h1 id="六、Emmet语法"><a href="#六、Emmet语法" class="headerlink" title="六、Emmet语法"></a>六、Emmet语法</h1><p>Emmet语法的前身是Zen coding，它使用缩写，来提高html&#x2F;css的编写速度，Vscode内部已经集成该语法</p><h2 id="1-快速生成HTML结构语法"><a href="#1-快速生成HTML结构语法" class="headerlink" title="1.快速生成HTML结构语法"></a>1.快速生成HTML结构语法</h2><ol><li>生成标签，直接输入标签名，按tab键即可，比如div+tab</li><li>生成多个相同标签，加上*数量即可，如div*4</li><li>如果有父子级关系，可以用&gt;，如ul&gt;li就可以了</li><li>兄弟级用+，如div+p</li><li>生成带有类名或者id名的，类名用.classmane或者id名用#idname加tab，如p.p-class或p#p-id</li><li>如果生成的div类名是有顺序的，可以用自增符号$,如p.demo$*5，即可生成class名为demo1~5的p标签</li><li>生成标签内容可以用{}，如p{p内容}+tab</li></ol><p>5和6如果没有指定标签，默认是div标签。</p><h2 id="2-快速生成CSS样式语法"><a href="#2-快速生成CSS样式语法" class="headerlink" title="2.快速生成CSS样式语法"></a>2.快速生成CSS样式语法</h2><p>CSS基本采取简写首字母形式即可</p><p>如：w200+tab生成width: 200px；ih26+tab生成line-height: 26px</p><h1 id="七、CSS复合选择器"><a href="#七、CSS复合选择器" class="headerlink" title="七、CSS复合选择器"></a>七、CSS复合选择器</h1><p>复合选择器建立在基础选择器之上，对基础选择器进行组合形成的。</p><ul><li>更准确、更高效的选择目标标签</li><li>由两个或多个基础选择器，通过不同的方式组合而成的</li><li>常用复合选择器有：后代选择器、子选择器、并集选择器、伪类选择器等</li></ul><h2 id="1-后代选择器（重要）"><a href="#1-后代选择器（重要）" class="headerlink" title="1.后代选择器（重要）"></a>1.后代选择器（重要）</h2><p>后代选择器又称为包含选择器，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">ol li &#123;    color: red;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>即可选择将ol内部的li设置为red，也可搭配class使用。</p><h2 id="2-子选择器（重要）"><a href="#2-子选择器（重要）" class="headerlink" title="2.子选择器（重要）"></a>2.子选择器（重要）</h2><p>只能选择作为某一元素的最近一级子元素。<br>写法：元素1＞元素2{样式声明}</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">ol>li &#123;    color: red;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>li内部的不会变化。</p><h2 id="3-并集选择器（重要）"><a href="#3-并集选择器（重要）" class="headerlink" title="3.并集选择器（重要）"></a>3.并集选择器（重要）</h2><p>并集选择器可以选择多组标签，同时为他们定义相同的样式，通常用于集体声明。<br>写法：元素1, 元素2{样式声明}（通常一个元素名加，为一行）</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">div, p&#123;    color: red;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>元素可用后代选择器和子选择器代替</p><h2 id="4-伪类选择器"><a href="#4-伪类选择器" class="headerlink" title="4.伪类选择器"></a>4.伪类选择器</h2><p>用于向某些选择器添加特殊的效果，比如给链接添加特殊喜爱过，或选择第1个，第n个元素。<br>用”:”表示，比如:hover（当鼠标经过的时候）、:first-child（第一个孩子）。<br>伪类选择器有很多，有链接伪类、结构伪类。</p><h3 id="1-链接伪类"><a href="#1-链接伪类" class="headerlink" title="(1)链接伪类"></a>(1)链接伪类</h3><ul><li>a:link{样式声明}        &#x2F;<em>选择所有未被访问的链接</em>&#x2F;</li><li>a:visited{样式声明}     &#x2F;<em>选择所有已被访问的链接</em>&#x2F;</li><li>a:hover{样式声明}       &#x2F;<em>选择鼠标指针位于其上的链接</em>&#x2F;</li><li>a:avtive{样式声明}      &#x2F;<em>选择活动链接（鼠标按下未弹起的链接）</em>&#x2F;</li></ul><p>为了确保生效，请按照LVHA的顺序声明:link-:visited-:hover-:active</p><p>实际开发经常用a指定链接样式，再用:hover定义鼠标悬停效果就可以了</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">a &#123;    color: #333;    text-decoration: none;&#125;a:hover &#123;    color: #369;    text-decoration: underline;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-focus伪类选择器"><a href="#2-focus伪类选择器" class="headerlink" title="(2):focus伪类选择器"></a>(2):focus伪类选择器</h3><p>用于选取获得焦点（光标）的表单元素</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">imput:focus &#123;    background-color: yello;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="八、CSS的元素显示模式"><a href="#八、CSS的元素显示模式" class="headerlink" title="八、CSS的元素显示模式"></a>八、CSS的元素显示模式</h1><p>元素显示模式就是元素以什么方式进行显示，一般分为块元素和行内元素 </p><h2 id="1-块元素"><a href="#1-块元素" class="headerlink" title="1.块元素"></a>1.块元素</h2><p>常见的块元素有<strong>h1~h6、p、div、ul、ol、li等</strong></p><p>块元素的特点：</p><ol><li>独占一行</li><li>高度、宽度、外边距以及内边距都可以控制</li><li>宽度默认是容器（父级宽度）的100%</li><li>里面可以放行内或者块级元素</li></ol><p>注：文字类元素内不能使用块级元素，如p和h1<br>~h6不能放其他块级元素</p><h2 id="2-行内元素"><a href="#2-行内元素" class="headerlink" title="2.行内元素"></a>2.行内元素</h2><p>常见行内元素有<strong>a、strong、b、em、i、del、s、ins、u、span等</strong></p><p>行内元素的特点：</p><ol><li>一行可以有多个</li><li>高、宽直接设置无效</li><li>默认宽度是它本身内容的宽度</li><li>行内元素只能容纳文本或者其他行内元素</li></ol><p>注：链接里不能再放链接，特殊情况链接a里面可以放块级元素，但是给a转换一下块级模式最安全</p><h2 id="3-行内块元素"><a href="#3-行内块元素" class="headerlink" title="3.行内块元素"></a>3.行内块元素</h2><p>行内元素有几个特殊的标签：<strong>img、input、td</strong>。它们同时具有块元素和行内元素的特点。</p><p>行内块元素的特点：</p><ol><li>一行显示多个，与相邻行内元素在一行时有空隙</li><li>默认宽度时内容本身的宽度</li><li>高度、行高、外边距以及内边距都可以控制</li></ol><h2 id="4-元素显示模式转换"><a href="#4-元素显示模式转换" class="headerlink" title="4.元素显示模式转换"></a>4.元素显示模式转换</h2><ul><li>行内元素转换为块元素：<strong>display:block</strong>;</li><li>块元素转换为行内元素：<strong>display:inline</strong>;</li><li>转换为行内块元素：<strong>display:inline-block</strong>;</li></ul><p>注：写在style中相应的元素CSS属性内</p><h2 id="5-单行文字垂直居中"><a href="#5-单行文字垂直居中" class="headerlink" title="5.单行文字垂直居中"></a>5.单行文字垂直居中</h2><p>CSS没有文字垂直居中的代码，我们可以让<strong>文字的行高等于盒子的高度</strong></p><h1 id="九、CSS的背景"><a href="#九、CSS的背景" class="headerlink" title="九、CSS的背景"></a>九、CSS的背景</h1><p>背景属性有：<strong>背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等</strong></p><h2 id="1-背景颜色"><a href="#1-背景颜色" class="headerlink" title="1.背景颜色"></a>1.背景颜色</h2><p>background-color属性定义元素的背景颜色<br>默认值是<strong>transparent</strong>（透明），也可以指定一种颜色</p><h2 id="2-背景图片"><a href="#2-背景图片" class="headerlink" title="2.背景图片"></a>2.背景图片</h2><p>background-image属性描述了元素的背景图像，优点是便于控制位置<br>属性值有：none\url()定义</p><h2 id="3-背景平铺"><a href="#3-背景平铺" class="headerlink" title="3.背景平铺"></a>3.背景平铺</h2><p>background-repeat属性设置背景照片平铺效果<br>属性值有：<strong>repeat&#x2F;no-repeat&#x2F;repeat-x&#x2F;repeat-y</strong><br>依次是：<strong>平铺&#x2F;不平铺&#x2F;沿着x轴平铺&#x2F;沿着y轴平铺</strong></p><h2 id="4-背景图片位置"><a href="#4-背景图片位置" class="headerlink" title="4.背景图片位置"></a>4.背景图片位置</h2><p>background-position属性改变图片在背景中的位置<br>属性值有：<strong>x y</strong>;<br>x，y可以使用方位名词或者精确单位</p><h3 id="1-方位名词"><a href="#1-方位名词" class="headerlink" title="(1)方位名词"></a>(1)方位名词</h3><ul><li>方位名词有：<strong>top、center、bottom、left、right</strong></li><li>如果只写了一个方位名词，第二个值默认居中对齐</li><li>方位名词因为x和y不同，所以顺序可以颠倒</li></ul><h3 id="2-精确单位"><a href="#2-精确单位" class="headerlink" title="(2)精确单位"></a>(2)精确单位</h3><ul><li>精确单位第一个一定是x坐标，第二个一定是y坐标</li><li>如果只写了一个坐标，则是x坐标，y坐标默认居中对齐</li></ul><h3 id="3-混合单位"><a href="#3-混合单位" class="headerlink" title="(3)混合单位"></a>(3)混合单位</h3><ul><li>精确单位和方位名词可以混合使用，但第一个一定是x坐标，第二个值一定是y坐标</li></ul><h2 id="5-背景图像固定"><a href="#5-背景图像固定" class="headerlink" title="5.背景图像固定"></a>5.背景图像固定</h2><p>background-attachment属性设置背景图像是否固定或者随着页面的其余部分滚动<br>属性值有：<strong>scroll&#x2F;fixed</strong><br>依次为：<strong>随着内容滚动&#x2F;固定</strong></p><h2 id="6-背景符合写法"><a href="#6-背景符合写法" class="headerlink" title="6.背景符合写法"></a>6.背景符合写法</h2><p>为了简化背景属性的代码，我们可以将这些属性合并简写在同一个属性background中，从而节约代码量<br>没有特定的书写顺序，一般习惯约定顺序为：<br>background：<strong>背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置</strong></p><h2 id="7-背景色半透明"><a href="#7-背景色半透明" class="headerlink" title="7.背景色半透明"></a>7.背景色半透明</h2><p>CSS3为我们提供了颜色半透明的效果</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">background: rgba(0, 0, 0, 0.3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>rgba：红，绿，蓝，透明度（alpha）</li><li>透明度取值范围在0~1之间,可简写为.3</li><li>背景半透明指盒子半透明，盒子里面的内容不受影响</li><li>CSS3新增属性，是IE9+版本浏览器才支持（实际开发不考虑兼容性）</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑必装软件合集</title>
      <link href="/2022/08/04/dian-nao-bi-zhuang-ruan-jian-he-ji/"/>
      <url>/2022/08/04/dian-nao-bi-zhuang-ruan-jian-he-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="iGG谷歌访问助手"><a href="#iGG谷歌访问助手" class="headerlink" title="iGG谷歌访问助手"></a>iGG谷歌访问助手</h1><p>谷歌浏览器第一步，下载iGG谷歌助手，再登陆账号同步账号信息。<br>下载地址：<a href="https://chrome.zzzmh.cn/info/ncldcbhpeplkfijdhnoepdgdnmjkckij">https://chrome.zzzmh.cn/info/ncldcbhpeplkfijdhnoepdgdnmjkckij</a></p><h1 id="桌面图标美化"><a href="#桌面图标美化" class="headerlink" title="桌面图标美化"></a>桌面图标美化</h1><h2 id="RocketDock"><a href="#RocketDock" class="headerlink" title="RocketDock"></a>RocketDock</h2><p>RocketDock是一款模仿苹果的win下的桌面美化工具。<br>官网：<a href="https://punklabs.com/">https://punklabs.com/</a></p><h2 id="Stacks-Docklet-2-0"><a href="#Stacks-Docklet-2-0" class="headerlink" title="Stacks Docklet 2.0"></a>Stacks Docklet 2.0</h2><p>Stacks Docklet是RocketDock中的一个插件，可以实现软件图标的折叠与展开。<br>下载地址<a href="https://www.softpedia.com/get/Desktop-Enhancements/Other-Desktop-Enhancements/Stacks-Docklet.shtml">https://www.softpedia.com/get/Desktop-Enhancements/Other-Desktop-Enhancements/Stacks-Docklet.shtml</a><br><strong>注意</strong>：安装过程中记得把其他的安装的√给×了<br>安装完成后把整个文件夹剪切到&#x2F;RocketDock&#x2F;Docklets文件夹下</p><h1 id="7-Zip"><a href="#7-Zip" class="headerlink" title="7-Zip"></a>7-Zip</h1><p>强力的压缩软件。<br>官网：<a href="https://www.7-zip.org/">https://www.7-zip.org/</a></p><h1 id="360驱动大师"><a href="#360驱动大师" class="headerlink" title="360驱动大师"></a>360驱动大师</h1><p>简洁的驱动更新软件，不过全面诊断的的时候*<strong>不要</strong>修复系统安全防护，该项会安装360全家桶。<br>官网：<a href="http://dm.weishi.360.cn/home.html">http://dm.weishi.360.cn/home.html</a></p><h1 id="格式工厂"><a href="#格式工厂" class="headerlink" title="格式工厂"></a>格式工厂</h1><p>格式工厂是一款免费多功能的多媒体格式转换软件(视频，图片的格式转换)。<br>官网：<a href="http://www.pcgeshi.com/">http://www.pcgeshi.com/</a></p><h1 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h1><p>IDM是Internet Download Manager的简称，是一款电脑专业的下载器，不仅下载速度快，还能嗅探网站的视频并下载。<br>官网：<a href="https://www.internetdownloadmanager.cn/">https://www.internetdownloadmanager.cn/</a><br>破解版链接：<a href="https://pan.baidu.com/s/1OaXHih42NmHGNZEkVzIL-Q?pwd=1234">https://pan.baidu.com/s/1OaXHih42NmHGNZEkVzIL-Q?pwd=1234</a></p><h1 id="nn加速器"><a href="#nn加速器" class="headerlink" title="nn加速器"></a>nn加速器</h1><p>nn加速器是一款持续很久的免费游戏加速器。<br>官网：<a href="https://www.nn.com/">https://www.nn.com/</a></p><h1 id="potplayer"><a href="#potplayer" class="headerlink" title="potplayer"></a>potplayer</h1><p>PotPlayer 是 KMPlayer 的原制作者姜龙喜进入 Daum 公司后的新一代网络播放器。PotPlayer 的优势在于强大的内置解码器；而 KMPlayer 的优势在于强大的定制能力和个性化功能。<br>下载地址：<a href="https://potplayer.en.softonic.com/">https://potplayer.en.softonic.com/</a></p><h1 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h1><p>强大的截图软件。<br>官网：<a href="https://zh.snipaste.com/">https://zh.snipaste.com/</a></p><h1 id="Uninstall-Tool"><a href="#Uninstall-Tool" class="headerlink" title="Uninstall Tool"></a>Uninstall Tool</h1><p>强力的卸载软件。<br>官网：<a href="https://crystalidea.com/uninstall-tool">https://crystalidea.com/uninstall-tool</a></p><h1 id="酷我音乐"><a href="#酷我音乐" class="headerlink" title="酷我音乐"></a>酷我音乐</h1><p>破解版链接：<a href="https://pan.baidu.com/s/1RBsaENvxxdLleblqRFl0bA?pwd=x8i0">https://pan.baidu.com/s/1RBsaENvxxdLleblqRFl0bA?pwd=x8i0</a> </p><h1 id="Ocam"><a href="#Ocam" class="headerlink" title="Ocam"></a>Ocam</h1><p>小巧免费的录屏软件。<br>下载地址：<a href="https://ocam.en.softonic.com/">https://ocam.en.softonic.com/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 搞机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html学习笔记</title>
      <link href="/2022/07/27/html-xue-xi-xin-de/"/>
      <url>/2022/07/27/html-xue-xi-xin-de/</url>
      
        <content type="html"><![CDATA[<p>注：vscode添加注释用Alt+Shift+A注释所选内容，ctrl+&#x2F;注释所选整行。</p><h1 id="一、Web标准的构成"><a href="#一、Web标准的构成" class="headerlink" title="一、Web标准的构成"></a>一、Web标准的构成</h1><table><thead><tr><th>标准</th><th>说明</th></tr></thead><tbody><tr><td>结构</td><td>用于对<strong>网页元素</strong>进行整理和分类，html</td></tr><tr><td>表现</td><td>用于设置网页元素的版式、颜色、大小等<strong>外观样式</strong>，CSS</td></tr><tr><td>行为</td><td>指网页模型的定义及<strong>交互</strong>的编写，Javascript</td></tr></tbody></table><p>即结构写到Html文件中，表现写到CSS文件中，行为写到Javascript文件中；三者中 <strong>结构</strong> 最重要</p><h1 id="二、基本结构标签"><a href="#二、基本结构标签" class="headerlink" title="二、基本结构标签"></a>二、基本结构标签</h1><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td>html和&#x2F;html</td><td>HTML标签</td><td>页面中最大的标签，我们称为 根标签</td></tr><tr><td>head和&#x2F;head</td><td>文档的头部</td><td>注意在head标签中我们必须要设置的标签是title</td></tr><tr><td>title和&#x2F;title</td><td>文档的标题</td><td>让页面拥有一个属于自己的网页标题</td></tr><tr><td>body和&#x2F;body</td><td>文档的主体</td><td>元素包含文档的所有内容，页面内容基本都是放到body里面的</td></tr></tbody></table><p>vscode新建html文件，英文“!”,第一个自动创建基本结构如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 类型声明 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- lang语言种类是zh-CN --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 字符集是UTF-8(万国码) --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>创建的页面标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    主题内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、HTML常用标签"><a href="#三、HTML常用标签" class="headerlink" title="三、HTML常用标签"></a>三、HTML常用标签</h1><h2 id="1-标题标签"><a href="#1-标题标签" class="headerlink" title="1.标题标签"></a>1.标题标签</h2><p>&lt;h1&gt;-&lt;h6&gt;6个等级的标题标签</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>一级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-段落标签"><a href="#2-段落标签" class="headerlink" title="2.段落标签"></a>2.段落标签</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>段落标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>段落内容随浏览器大小自动变化，段落与段落之间有间隙。</p><h2 id="3-换行标签"><a href="#3-换行标签" class="headerlink" title="3.换行标签"></a>3.换行标签</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>换行标签<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>换行标签是单标签，行之间没有间隙。</p><h2 id="4-文本格式化标签"><a href="#4-文本格式化标签" class="headerlink" title="4.文本格式化标签"></a>4.文本格式化标签</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>加粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 也可用&lt;b>&lt;/b> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>倾斜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 也可用&lt;i>&lt;/i> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 也可用&lt;s>&lt;/s> --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ins</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 也可用&lt;u>&lt;/u> --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>推荐用前面的。</p><h2 id="5-lt-div-gt-和-lt-span-gt-标签"><a href="#5-lt-div-gt-和-lt-span-gt-标签" class="headerlink" title="5.&lt;div&gt;和&lt;span&gt;标签"></a>5.&lt;div&gt;和&lt;span&gt;标签</h2><p>&lt;div&gt;和&lt;span&gt;没有语义，它们相当于一个盒子，用来装内容。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>div独占一行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>span之间一行显示，但之间有距离<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-图像标签"><a href="#6-图像标签" class="headerlink" title="6.图像标签"></a>6.图像标签</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图像URL<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>img也是单标签，下面是其他属性：</p><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td><strong>必须属性</strong></td></tr><tr><td>alt</td><td>文本</td><td>图像不能显示的文字</td></tr><tr><td>title</td><td>文本</td><td>鼠标放到图像上显示的文字</td></tr><tr><td>width</td><td>像素</td><td>图像的宽度</td></tr><tr><td>height</td><td>像素</td><td>图像的高度</td></tr><tr><td>border</td><td>像素</td><td>图像的边框粗细</td></tr></tbody></table><p>设置width或者height其中之一，另一个属性会等比例缩放。<br>border一般不通过html设定，而通过CSS来设定。</p><h2 id="7-相对路径"><a href="#7-相对路径" class="headerlink" title="7.相对路径"></a>7.相对路径</h2><table><thead><tr><th>相对属性分类</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>同一级路径</td><td></td><td>图像位于html文件同一级 如&lt;img src&#x3D;”hello.jpg” &#x2F;&gt;</td></tr><tr><td>下一级路径</td><td>&#x2F;</td><td>图像位于hyml文件下一级 &lt;img src&#x3D;”images&#x2F;hello.jpg” &#x2F;&gt;</td></tr><tr><td>上一级路径</td><td>..&#x2F;</td><td>图像位于html文件上一级 &lt;img src&#x3D;”..&#x2F;hello.jpg” &#x2F;&gt;</td></tr></tbody></table><p>上一级如果出现多层嵌套则用..&#x2F;..&#x2F;.多层.&#x2F;hello.jpg</p><h2 id="8-绝对路径"><a href="#8-绝对路径" class="headerlink" title="8.绝对路径"></a>8.绝对路径</h2><p>从盘符开始，如D:\MarshVer’s Blog\source_posts\Html学习心得\img.jpg。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>D:\MarshVer<span class="token punctuation">'</span>s Blog\source\_posts\Html学习心得\img.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实际开发常用完整的图片网络地址。</p><h2 id="9-超链接标签"><a href="#9-超链接标签" class="headerlink" title="9.超链接标签"></a>9.超链接标签</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>跳转目标<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>目标窗口的弹出方式<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 文本或图像 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>属性</th><th>作业</th></tr></thead><tbody><tr><td>href</td><td>指定链接目标的url地址，<strong>必须属性</strong></td></tr><tr><td>target</td><td>指定连接打开方式，默认_self，可设置_blank在新窗口中打开</td></tr></tbody></table><ul><li>外部链接href里跳转的目标是网址，网址需要从 <strong>http:&#x2F;&#x2F;</strong> 开始</li><li>内部链接href里跳转的目标是本地html文件的相对地址，</li><li>空链接href里填写#临时替代，</li><li>下载链接href填写的是文件就是下载文件（.exe，.zip等）。</li></ul><h2 id="10-锚点链接"><a href="#10-锚点链接" class="headerlink" title="10.锚点链接"></a>10.锚点链接</h2><p>锚点链接可以快速定位到页面的某个位置。</p><ul><li>在链接文本的href属性中，设置属性值为 <strong>#名字</strong> 的形式，如 &lt;a href&#x3D;”#two”&gt; 锚点&lt;&#x2F;a&gt;</li><li>找到目标位置标签，里面添加一个 <strong>id属性</strong>，如&lt;h3 id&#x3D;”two”&gt;锚点介绍&lt;&#x2F;h3&gt;</li></ul><p>锚点链接类似于超链接标签，只是href里的内容不同，同时还需要在跳转的目的字段加入id属性。</p><h2 id="11-特殊字符"><a href="#11-特殊字符" class="headerlink" title="11.特殊字符"></a>11.特殊字符</h2><p>html文件中的某些特殊字符可能无法显示，需要用特定的代码代替，常用的如下：</p><table><thead><tr><th>特殊字符</th><th>描述</th><th>字符的代码</th></tr></thead><tbody><tr><td>&lt;</td><td>小于号</td><td>&amp;lt;</td></tr><tr><td>&gt;</td><td>大于号</td><td>&amp;gt;</td></tr><tr><td></td><td>空格符</td><td>&amp;nbsp;</td></tr></tbody></table><h1 id="四、表格标签"><a href="#四、表格标签" class="headerlink" title="四、表格标签"></a>四、表格标签</h1><h2 id="1-表格相关标签"><a href="#1-表格相关标签" class="headerlink" title="1.表格相关标签"></a>1.表格相关标签</h2><h3 id="1-表格标签基本结构"><a href="#1-表格标签基本结构" class="headerlink" title="(1)表格标签基本结构"></a>(1)表格标签基本结构</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>单元格内的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        ...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>&lt;table&gt;&lt;&#x2F;table&gt;定义表格</li><li>&lt;tr&gt;&lt;&#x2F;tr&gt;定义表格中的行，必须嵌套在&lt;table&gt;&lt;&#x2F;table&gt;中</li><li>&lt;td&gt;&lt;&#x2F;td&gt;定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;&#x2F;tr&gt;中</li></ul><h3 id="2-表头单元格标签"><a href="#2-表头单元格标签" class="headerlink" title="(2)表头单元格标签"></a>(2)表头单元格标签</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>单元格内的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        ...    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表头单元格位于第一行或第一列，其内容默认加粗居中显示。</p><h3 id="3-表格结构标签"><a href="#3-表格结构标签" class="headerlink" title="(3)表格结构标签"></a>(3)表格结构标签</h3><p>在表格标签中，分别用：<strong>&lt;thead&gt;&lt;&#x2F;thead&gt;<strong>标签</strong>表格的头部区域</strong>；<strong>&lt;tbody&gt;&lt;&#x2F;tbody&gt;<strong>标签</strong>表格的主题区域</strong>,这样更好的分清表格结构。</p><p>&lt;thead&gt;内部必须拥有&lt;tr&gt;标签，位于第一行。</p><h2 id="2-表格属性"><a href="#2-表格属性" class="headerlink" title="2.表格属性"></a>2.表格属性</h2><h3 id="1-一般属性"><a href="#1-一般属性" class="headerlink" title="(1)一般属性"></a>(1)一般属性</h3><p>表格属性实际不常用，一般在CSS中设置。</p><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left，center、right</td><td>表格对齐方式</td></tr><tr><td>border</td><td>1或””</td><td>单元格是否有边框，默认没有</td></tr><tr><td>cellpadding</td><td>像素值</td><td>单元格边缘与其内容的距离，默认1像素</td></tr><tr><td>cellspacing</td><td>像素值</td><td>单元格之间的距离，默认2像素</td></tr><tr><td>width</td><td>像素值或百分比</td><td>表格宽度</td></tr></tbody></table><h3 id="2-合并单元格属性"><a href="#2-合并单元格属性" class="headerlink" title="(2)合并单元格属性"></a>(2)合并单元格属性</h3><ul><li>跨行合并：rowspan&#x3D;”合并单元格的个数”（写在上测单元格）</li><li>跨列合并：colspan&#x3D;”合并单元格的个数”（写在左侧单元格）<br>合并单元格个数包括自己，作为单元格的属性。</li></ul><p>合并单元格三部曲：</p><ul><li>确定跨行还是跨列</li><li>找到目标单元格，写上合并方式&#x3D;合并的单元格的数量如：&lt;td colspan&#x3D;”2”&gt;单元格内容&lt;&#x2F;td&gt;</li><li>删除多余的单元格</li></ul><h1 id="五、列表标签"><a href="#五、列表标签" class="headerlink" title="五、列表标签"></a>五、列表标签</h1><p>列表最大的特点就是整齐、整洁、有序。它作为布局会更加自由和方便。</p><h2 id="1-无序列表（重点）"><a href="#1-无序列表（重点）" class="headerlink" title="1.无序列表（重点）"></a>1.无序列表（重点）</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;ul&gt;&lt;&#x2F;ul&gt;中只能嵌套&lt;li&gt;&lt;&#x2F;li&gt;，但&lt;li&gt;&lt;&#x2F;li&gt;中可以容纳所有元素。</p><p>无序列表有自己的属性，但实际一般会使用CSS来设置</p><h2 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h2><p>&lt;ol&gt;&lt;&#x2F;ol&gt;标签用于定义有序列表，列表排序已数字显示，使用&lt;li&gt;&lt;&#x2F;li&gt;标签定义列表项。</p><p>其他与无序列表一样。</p><h2 id="3-自定义列表（重点）"><a href="#3-自定义列表（重点）" class="headerlink" title="3.自定义列表（重点）"></a>3.自定义列表（重点）</h2><p>自定义列表常用于对术语或名词进行解释和描述。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>名词1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&lt;dl&gt;&lt;&#x2F;dl&gt;里面只能有&lt;dt&gt;&lt;&#x2F;dt&gt;和&lt;dd&gt;&lt;&#x2F;dd&gt;<br>一个&lt;dt&gt;&lt;&#x2F;dt&gt;对应多个&lt;dd&gt;&lt;&#x2F;dd&gt;</p><h2 id="4-表单标签"><a href="#4-表单标签" class="headerlink" title="4.表单标签"></a>4.表单标签</h2><p>表单用于收集用户信息。</p><h3 id="1-表单域"><a href="#1-表单域" class="headerlink" title="(1)表单域"></a>(1)表单域</h3><p>&lt;form&gt;&lt;&#x2F;form&gt;会把它范围内的表单元素信息提交给服务器。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url地址<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交方式<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>表单域名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    各种表单元素控件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>属性</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url地址</td><td>指定接收并处理表单数据的服务器程序的url地址</td></tr><tr><td>method</td><td>get&#x2F;post</td><td>设置表单数据的提交方式</td></tr><tr><td>name</td><td>名称</td><td>指定表单名称</td></tr></tbody></table><h3 id="2-表单控件（元素）"><a href="#2-表单控件（元素）" class="headerlink" title="(2)表单控件（元素）"></a>(2)表单控件（元素）</h3><p>1.input输入表单元素(单标签)<br>2.select下拉表单元素<br>3.textarea文本域元素</p><h4 id="1-input的一些类型"><a href="#1-input的一些类型" class="headerlink" title="1)input的一些类型"></a>1)input的一些类型</h4><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>    用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- text 文本框 用户可以输入任何文字 --></span>    密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- password 密码框 用户看不见输入的密码 --></span>    性别：男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- radio 单选按钮 可以实现多选一 --></span>    爱好：吃饭<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span> 睡觉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span> 打游戏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>     <span class="token comment">&lt;!-- checkbox 复选按钮 可以实现多选 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-input的重要属性"><a href="#2-input的重要属性" class="headerlink" title="2)input的重要属性"></a>2)input的重要属性</h4><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>自定义</td><td>定义input元素的名称</td></tr><tr><td>value</td><td>自定义</td><td>规定input元素的值</td></tr><tr><td>checked</td><td>checked</td><td>规定首次加载时默认被选中</td></tr><tr><td>maxlength</td><td>正整数</td><td>规定输入字符的最大长度</td></tr></tbody></table><p><strong>注：</strong></p><ul><li>name属性在radio和checkbox中应相同才能实现各自的功能。</li><li>value值在radio和checkbox中应赋值，这样导入后台才能被识别。</li><li>type，name和value必须填，name和value主要针对后台人员使用。</li></ul><h4 id="3-input的其他属性"><a href="#3-input的其他属性" class="headerlink" title="3)input的其他属性"></a>3)input的其他属性</h4><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>定义一行文本可输入数据</td></tr><tr><td>button</td><td>定义可点击按钮（多数情况下通过Javascript启动脚本）</td></tr><tr><td>file</td><td>定义输入字段和“浏览”按钮，供文件上传</td></tr><tr><td><em>hidden</em></td><td>定义颖仓的输入字段</td></tr><tr><td><em>image</em></td><td>定义图像形式的提交按钮</td></tr><tr><td>reset</td><td>定义重置按钮，清空表单中的所有数据</td></tr><tr><td>submit</td><td>定义提交按钮，把表单数据发送到服务器</td></tr></tbody></table><h4 id="4-label标签"><a href="#4-label标签" class="headerlink" title="4)label标签"></a>4)label标签</h4><p>label标签用于绑定一个表单元素，当点击label标签内的文本，即可选定。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token comment">&lt;!-- label的for属性值与input的id值相同 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="5-select标签"><a href="#5-select标签" class="headerlink" title="5)select标签"></a>5)select标签</h4><p>select定义下拉列表。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>选项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 设置selected为默认选择项 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-textarea标签"><a href="#6-textarea标签" class="headerlink" title="6)textarea标签"></a>6)textarea标签</h4><p>textarea定义大量内容的文本框。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- row和cols在实际开发基本不用，都是用CSS来改变大小 --></span>    默认文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>更多html内容请查看W3C文档说明：<a href="https://www.w3school.com.cn/html/index.asp">https://www.w3school.com.cn/html/index.asp</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode中C和C++的环境配置</title>
      <link href="/2022/07/05/vscode-zhong-c-he-c-de-huan-jing-pei-zhi/"/>
      <url>/2022/07/05/vscode-zhong-c-he-c-de-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="VScode中配置C-x2F-C"><a href="#VScode中配置C-x2F-C" class="headerlink" title="VScode中配置C&#x2F;C++"></a>VScode中配置C&#x2F;C++</h1><p>这是一个教程，（在windows 10中）为vscode配置C&#x2F;C++的运行环境。</p><h2 id="1-下载-VScode"><a href="#1-下载-VScode" class="headerlink" title="1.下载 VScode"></a>1.下载 VScode</h2><p>首先，去 <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a> 下载对应操作系统的VScode，下载稳定版本。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/RZea1UrwmcYdODA.png"></p><h2 id="2-安装-VScode"><a href="#2-安装-VScode" class="headerlink" title="2.安装 VScode"></a>2.安装 VScode</h2><p>全选和默认安装。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/7ztxYewrKACLPhn.png"></p><h2 id="3-下载-Gcc编译工具"><a href="#3-下载-Gcc编译工具" class="headerlink" title="3.下载 Gcc编译工具"></a>3.下载 Gcc编译工具</h2><p>去 <a href="https://sourceforge.net/projects/mingw-w64/files/">https://sourceforge.net/projects/mingw-w64/files/</a> 下载mingw-w64,下面是Windows版本。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/tF6avNq89VO4noH.png"></p><h2 id="4-解压-Gcc"><a href="#4-解压-Gcc" class="headerlink" title="4.解压 Gcc"></a>4.解压 Gcc</h2><p>解压 gcc 到你喜欢的位置,例如C盘的根目录。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/IbtenwvsYdZES5y.png"></p><h2 id="5-配置环境变量"><a href="#5-配置环境变量" class="headerlink" title="5.配置环境变量"></a>5.配置环境变量</h2><p>为了让程序访问这些编译器，你需要添加gcc-bin文件夹的目录 (我的是 C: \mingw64 \ bin ,选择地址复制) 到用户变量Path中。<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/A9qKemdkTcujgO8.png"><br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/HbkICMA7tT3hlOj.png"><br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/QmwbOLZMJUp164y.png"><br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/QzsNOWr8xq7HFL3.png"></p><p>现在证明一下是否配置成功，任意地方打开cmd，输入 gcc –version (中间有个空格), 点击确定, 如果看到如下的版本号，则证明配置成功。<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/m9JecMhb4jXY2xo.png"></p><h2 id="6-配置你的代码文件夹"><a href="#6-配置你的代码文件夹" class="headerlink" title="6.配置你的代码文件夹"></a>6.配置你的代码文件夹</h2><p>在你喜欢的地方建一个文件夹名为CODE_ C,在这个文件夹中,你能放入你的C语言程序。如果你想放入其他语言的程序，可以新建一个新的文件夹。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/Pz7CN6BZWlVRDSr.png"></p><p>在 CODE_C 文件夹中，你可以创建两个文件夹 C_Single 和 C_Multiple。前面一个可以放单个小项目，后面一个可以放复杂的大项目。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/7d8qEPgsAUG4lwL.png"></p><h2 id="7-配置VScode"><a href="#7-配置VScode" class="headerlink" title="7.配置VScode"></a>7.配置VScode</h2><p>打开你的VScode，并打开C_Single文件夹，新建如图文件夹和文件：</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/j1zDhbCVXqEt3H9.png"></p><p>launch.json:</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span><span class="token comment">//这个大括号里是我们的‘调试(Debug)’配置</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Debug"</span><span class="token punctuation">,</span> <span class="token comment">// 配置名称</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"cppdbg"</span><span class="token punctuation">,</span> <span class="token comment">// 配置类型，cppdbg对应cpptools提供的调试功能；可以认为此处只能是cppdbg</span>            <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span> <span class="token comment">// 请求配置类型，可以为launch（启动）或attach（附加）</span>            <span class="token property">"program"</span><span class="token operator">:</span> <span class="token string">"$&#123;fileDirname&#125;\\bin\\$&#123;fileBasenameNoExtension&#125;.exe"</span><span class="token punctuation">,</span> <span class="token comment">// 将要进行调试的程序的路径</span>            <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 程序调试时传递给程序的命令行参数，这里设为空即可</span>            <span class="token property">"stopAtEntry"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 设为true时程序将暂停在程序入口处，相当于在main上打断点</span>            <span class="token property">"cwd"</span><span class="token operator">:</span> <span class="token string">"$&#123;fileDirname&#125;"</span><span class="token punctuation">,</span> <span class="token comment">// 调试程序时的工作目录，此处为源码文件所在目录</span>            <span class="token property">"environment"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 环境变量，这里设为空即可</span>            <span class="token property">"externalConsole"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 为true时使用单独的cmd窗口，跳出小黑框；设为false则是用vscode的内置终端，建议用内置终端</span>            <span class="token property">"internalConsoleOptions"</span><span class="token operator">:</span> <span class="token string">"neverOpen"</span><span class="token punctuation">,</span> <span class="token comment">// 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，新手调试用不到</span>            <span class="token property">"MIMode"</span><span class="token operator">:</span> <span class="token string">"gdb"</span><span class="token punctuation">,</span> <span class="token comment">// 指定连接的调试器，gdb是minGW中的调试程序</span>            <span class="token property">"miDebuggerPath"</span><span class="token operator">:</span> <span class="token string">"C:\\mingw64\\bin\\gdb.exe"</span><span class="token punctuation">,</span> <span class="token comment">// 指定调试器所在路径，如果你的minGW装在别的地方，则要改成你自己的路径，注意间隔是\\</span>            <span class="token property">"preLaunchTask"</span><span class="token operator">:</span> <span class="token string">"build"</span> <span class="token comment">// 调试开始前执行的任务，我们在调试前要编译构建。与tasks.json的label相对应，名字要一样</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>倒数第二个代码数据是你自己的gdb文件的位置，我的是 mingw64\bin\gdb.exe。</p><p>tasks.json:</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"tasks"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span><span class="token comment">//这个大括号里是‘构建（build）’任务</span>            <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"build"</span><span class="token punctuation">,</span> <span class="token comment">//任务名称，可以更改，不过不建议改</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"shell"</span><span class="token punctuation">,</span> <span class="token comment">//任务类型，process是vsc把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍</span>            <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"gcc"</span><span class="token punctuation">,</span> <span class="token comment">//编译命令，这里是gcc，编译c++的话换成g++</span>            <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">//方括号里是传给gcc命令的一系列参数，用于实现一些功能</span>                <span class="token string">"$&#123;file&#125;"</span><span class="token punctuation">,</span> <span class="token comment">//指定要编译的是当前文件</span>                <span class="token string">"-o"</span><span class="token punctuation">,</span> <span class="token comment">//指定输出文件的路径和名称</span>                <span class="token string">"$&#123;fileDirname&#125;\\bin\\$&#123;fileBasenameNoExtension&#125;.exe"</span><span class="token punctuation">,</span> <span class="token comment">//承接上一步的-o，让可执行文件输出到源码文件所在的文件夹下的bin文件夹内，并且让它的名字和源码文件相同</span>                <span class="token string">"-g"</span><span class="token punctuation">,</span> <span class="token comment">//生成和调试有关的信息</span>                <span class="token string">"-Wall"</span><span class="token punctuation">,</span> <span class="token comment">// 开启额外警告</span>                <span class="token string">"-static-libgcc"</span><span class="token punctuation">,</span>  <span class="token comment">// 静态链接libgcc</span>                <span class="token string">"-fexec-charset=GBK"</span><span class="token punctuation">,</span> <span class="token comment">// 生成的程序使用GBK编码，不加这一条会导致Win下输出中文乱码</span>                <span class="token string">"-std=c11"</span><span class="token punctuation">,</span> <span class="token comment">// 语言标准，可根据自己的需要进行修改，写c++要换成c++的语言标准，比如c++11</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"group"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//group表示‘组’，我们可以有很多的task，然后把他们放在一个‘组’里</span>                <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"build"</span><span class="token punctuation">,</span><span class="token comment">//表示这一组任务类型是构建</span>                <span class="token property">"isDefault"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token comment">//表示这个任务是当前这组任务中的默认任务</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"presentation"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token comment">//执行这个任务时的一些其他设定</span>                <span class="token property">"echo"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//表示在执行任务时在终端要有输出</span>                <span class="token property">"reveal"</span><span class="token operator">:</span> <span class="token string">"always"</span><span class="token punctuation">,</span> <span class="token comment">//执行任务时是否跳转到终端面板，可以为always，silent，never</span>                <span class="token property">"focus"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//设为true后可以使执行task时焦点聚集在终端，但对编译来说，设为true没有意义，因为运行的时候才涉及到输入</span>                <span class="token property">"panel"</span><span class="token operator">:</span> <span class="token string">"new"</span> <span class="token comment">//每次执行这个task时都新建一个终端面板，也可以设置为shared，共用一个面板，不过那样会出现‘任务将被终端重用’的提示，比较烦人</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"problemMatcher"</span><span class="token operator">:</span> <span class="token string">"$gcc"</span> <span class="token comment">//捕捉编译时编译器在终端里显示的报错信息，将其显示在vscode的‘问题’面板里</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span><span class="token comment">//这个大括号里是‘运行(run)’任务，一些设置与上面的构建任务性质相同</span>            <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"run"</span><span class="token punctuation">,</span>             <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"shell"</span><span class="token punctuation">,</span>             <span class="token property">"dependsOn"</span><span class="token operator">:</span> <span class="token string">"build"</span><span class="token punctuation">,</span> <span class="token comment">//任务依赖，因为要运行必须先构建，所以执行这个任务前必须先执行build任务，</span>            <span class="token property">"command"</span><span class="token operator">:</span> <span class="token string">"$&#123;fileDirname&#125;\\bin\\$&#123;fileBasenameNoExtension&#125;.exe"</span><span class="token punctuation">,</span> <span class="token comment">//执行exe文件，只需要指定这个exe文件在哪里就好</span>            <span class="token property">"group"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"kind"</span><span class="token operator">:</span> <span class="token string">"test"</span><span class="token punctuation">,</span> <span class="token comment">//这一组是‘测试’组，将run任务放在test组里方便我们用快捷键执行</span>                <span class="token property">"isDefault"</span><span class="token operator">:</span> <span class="token boolean">true</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token property">"presentation"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"echo"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token property">"reveal"</span><span class="token operator">:</span> <span class="token string">"always"</span><span class="token punctuation">,</span>                <span class="token property">"focus"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//这个就设置为true了，运行任务后将焦点聚集到终端，方便进行输入</span>                <span class="token property">"panel"</span><span class="token operator">:</span> <span class="token string">"new"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三行代码如果是配置C++的环境则改成g++（配置C++只有这一步与C不同，其他的跟配置C环境相同）。</p><h2 id="8-最后"><a href="#8-最后" class="headerlink" title="8.最后"></a>8.最后</h2><p>现在，你可以将vscode的快捷键设置为F4并编写C语言代码。按F4运行C语言代码，F5是dubug。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/kdxFJ2PjTeSAB4y.png"></p><p>运行C语言代码时，运行文件将显示在bin文件夹中。</p><p><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/MUfF5iXSkvT1hJW.png"></p><h2 id="现在开始你的编程之旅吧"><a href="#现在开始你的编程之旅吧" class="headerlink" title="现在开始你的编程之旅吧!"></a>现在开始你的编程之旅吧!</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客出现的问题</title>
      <link href="/2022/07/03/bo-ke-chu-xian-de-wen-ti/"/>
      <url>/2022/07/03/bo-ke-chu-xian-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="图片不显示"><a href="#图片不显示" class="headerlink" title="图片不显示"></a>图片不显示</h1><p>在根目录安装hexo-asset-image，就能按照markdown的格式进行图片的插入。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> https://github.com/CodeFalling/hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果npm下载太慢可以用cnpm install…代替。<br>安装cnpm，同时将cnmp使用淘宝镜像提高下载速度</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> cnpm -g<span class="token function">npm</span> <span class="token function">install</span> cnpm -g --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>同时在hexo中使用文章资源文件夹，在config.yaml文件中更改一下配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">post_asset_folder: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当该配置被应用后，使用hexo new命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹，你可以把与该文章有关的任何文件放在该文件夹中，并在文章中用相对路径![ ]（.&#x2F;…）引用。</p><h1 id="备份问题"><a href="#备份问题" class="headerlink" title="备份问题"></a>备份问题</h1><p>一般我们hexo d上传部署到github的其实是hexo编译后的文件，是用来生成网页的，不包含源文件。也就是上传的是在本地目录里自动生成的.deploy_git里面。<br>其他文件 ，包括我们写在source 里面的文章和配置文件，主题文件，都没有上传到github,所以可以利用git的分支管理，将源文件上传到另一个分支即可备份。</p><h2 id="1-创建新分支"><a href="#1-创建新分支" class="headerlink" title="1.创建新分支"></a>1.创建新分支</h2><p>下图所示位置输入分支名并确认即可创建（我的分支名为source）<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/a3EcMRejTlP4WHC.png"><br>将刚才创建的分支设置为默认分支：<br><img src="https://s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif" data-original="https://s2.loli.net/2022/08/03/pAekOq18VfCscYv.png"></p><h2 id="2-获取-git文件夹"><a href="#2-获取-git文件夹" class="headerlink" title="2.获取.git文件夹"></a>2.获取.git文件夹</h2><p>去任意地方把刚刚的source分支给clone下来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> clone https://github.com/marshver/marshver.github.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后把里面的.git文件夹剪切到博客的根文件夹中。</p><h2 id="3-主题文件无法上传"><a href="#3-主题文件无法上传" class="headerlink" title="3.主题文件无法上传"></a>3.主题文件无法上传</h2><p>如果你的博客里有主题文件夹（themes&#x2F;yourtheme），需要把主题文件夹的.git文件夹给删除，因为git不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的主题配置在别的电脑上就用不了了。</p><h2 id="4-博客备份"><a href="#4-博客备份" class="headerlink" title="4.博客备份"></a>4.博客备份</h2><p>博客文件打开git执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"Backup"</span><span class="token function">git</span> push origin <span class="token builtin class-name">source</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样就备份完博客的源文件，且在Github上能看到两个分支(master和source)。后续备份最后一步只需git push即可。</p><h2 id="5-恢复博客"><a href="#5-恢复博客" class="headerlink" title="5.恢复博客"></a>5.恢复博客</h2><p>如想恢复博客请看“博客相关”中的恢复博客<a href="/2022/07/01/bo-ke-xiang-guan/" title="博客相关">博客相关</a></p><h1 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h1><h2 id="1-图片问题"><a href="#1-图片问题" class="headerlink" title="1.图片问题"></a>1.图片问题</h2><h3 id="1-搭配图床"><a href="#1-搭配图床" class="headerlink" title="(1)搭配图床"></a>(1)搭配图床</h3><p>图片如果用本地文件，会影响服务器的响应速度，我们可以把图片放到图床上，在博客里用图片的url地址引用，可以在一定程度上加快服务器的响应速度。</p><p>这里我推荐sm.ms<a href="https://sm.ms/">https://sm.ms/</a>, 首先是免费的，虽然只有5个G，但对于只放图片够用了。</p><p>可以搭配PicGo图片批量上传，直接生成图片链接到剪切板，还能查看历史图片的URL链接，非常方便。</p><p>去官网： <a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a> 下载稳定版本的.exe文件，只需要将你自己sm.ms的API Token配置到PicGo上，即可使用。</p><h3 id="2-图片懒加载"><a href="#2-图片懒加载" class="headerlink" title="(2)图片懒加载"></a>(2)图片懒加载</h3><p>懒加载一般是当图片滚动进可视窗口内才加载图片，可视窗口之外的图片则不加载，对服务器有一定的缓解压力作用。</p><p>首先安装图片懒加载插件,根目录执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在Hexo根目录配置文件末尾加入以下代码：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 图片懒加载</span><span class="token key atrule">lazyload</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">onlypost</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 如果为 true，则只有来自帖子或页面的图像将支持延迟加载。# 如果为 false，则您网站的整个图像将使用延迟加载，包括来自您主题的图像 dist，但不包括来自 CSS 样式的背景图像。</span>  <span class="token key atrule">loadingImg</span><span class="token punctuation">:</span>  https<span class="token punctuation">:</span>//s2.loli.net/2022/08/03/yJ23MDaUGdg7LCk.gif <span class="token comment"># 加载图片 eg ./images/loading.gif</span>  <span class="token key atrule">isSPA</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># optional</span>  <span class="token key atrule">preloadRatio</span><span class="token punctuation">:</span> <span class="token number">3</span> <span class="token comment"># 默认是 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后hexo cl &amp;&amp; hexo g &amp;&amp; hexo s即可生效。</p><p>详细说明可以看原文介绍：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">https://github.com/Troy-Yang/hexo-lazyload-image</a></p><p>一般情况下懒加载会和gallery插件会发生冲突，结果可能就是点开图片，左翻右翻都是loading image。matery主题的解决方案是：<br>修改 &#x2F;themes&#x2F;matery&#x2F;source&#x2F;js 中的 matery.js文件(我的是matery主题)<br>在第108行加上：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'img[data-original]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-服务器加速"><a href="#2-服务器加速" class="headerlink" title="2.服务器加速"></a>2.服务器加速</h2><p>我们在把博客部署到github page上，会发现每次hexo d上传文件后，第一次的打开速度都比较慢，这主要是因为github的访问速度较慢。</p><p>我们可以把博客的静态文件部署到其他服务器上来加快速度，例如腾讯云或者阿里云，但国内的服务器大多要钱，而且还需要一个已备案域名来绑定。（腾讯云有个webify服务可以实现类似的功能，价格也不贵，按量计费，访问少的博客一天才几分钱。但是它默认的域名太长，不便于记忆，如果你有一个已备案的域名，且不介意这一点钱可以使用腾讯云的webify，并且在项目设置里绑定你的域名）。</p><p>白嫖党的我选择使用境外的Vercel或者netlify的免费服务器来加速。（vercel的速度好像比netlify的要快，强推）但毕竟是国外的，访问速度依旧没有国内的服务器块，而且可能偶尔会抽风，但对于个人博客够用了,下面介绍如何使用Vercel部署静态博客。</p><ol><li>首先进入Vercel的官网：<a href="https://vercel.com/">https://vercel.com/</a></li><li>将GitHub博客仓库的默认分支改为main（非源文件）（因为源文件导入vercel可能会运行错误）</li><li>Continue with Github使用Github授权并登录。点击New Porject，选择Browse All Templates选择你的博客框架，我的是hexo，然后选择Import Git Repository，授权博客文件的仓库，然后点击确定即可。settings中设置Your Username，则你的域名为Your Username.vercel.app。（是不是很好记！）</li><li>后续也可以通过把域名绑定到Cloudflare，使用Cloudflare的DNS加速，便可以使用vercel自定义域名加速访问。详细步骤见：<a href="/2022/08/19/shen-qing-mian-fei-yu-ming/" title="申请免费域名并绑定Cloudflare">申请免费域名并绑定Cloudflare</a></li></ol><p><strong>注</strong>：记得查看新建项目的view domains，左侧git项，Production Branch是博客源文件的分支（我的是source），不是hexo d生成的网页文件，是博客的源文件（包含主题和一些配置文件，其他服务器也是一样），不是的话记得修改，不然会报错。<strong>服务器的内容需要git push过一会才能生效。</strong></p><h1 id="代码块显示异常"><a href="#代码块显示异常" class="headerlink" title="代码块显示异常"></a>代码块显示异常</h1><p>代码块“{}”显示乱码，卸载hexo-prism-plugin，删除配置。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用hexo自带的PrismJS,效果一样。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_threshold</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="更改hexo-d的分支"><a href="#更改hexo-d的分支" class="headerlink" title="更改hexo d的分支"></a>更改hexo d的分支</h1><p>由于github将默认分支master改为了main，而hexo-deployer-git插件没有改，所以就算你改了_config.yml的默认分支为main，hexo d后依然会创建一个master指向main，main会有一定延迟接受master分支，所以我们要将hexo-deployer-git插件你指向的master全部改为main</p><h2 id="1-修改hexo-deployer-git插件"><a href="#1-修改hexo-deployer-git插件" class="headerlink" title="1.修改hexo-deployer-git插件"></a>1.修改hexo-deployer-git插件</h2><p>去目录： yourBlog\node_modules\hexo-deployer-git\lib\parse_config.js<br>VScode按F3查找master全部替换为main</p><h2 id="2-上传文件到main分支"><a href="#2-上传文件到main分支" class="headerlink" title="2.上传文件到main分支"></a>2.上传文件到main分支</h2><p>hexo cl+hexo g+hexo d</p><h2 id="3-删除master分支"><a href="#3-删除master分支" class="headerlink" title="3.删除master分支"></a>3.删除master分支</h2><p><strong>可以不删</strong><br>blog文件下打开git执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin :master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客相关</title>
      <link href="/2022/07/01/bo-ke-xiang-guan/"/>
      <url>/2022/07/01/bo-ke-xiang-guan/</url>
      
        <content type="html"><![CDATA[<h1 id="个人备份习惯"><a href="#个人备份习惯" class="headerlink" title="个人备份习惯"></a>个人备份习惯</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clhexo ghexo d<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"Backup"</span><span class="token function">git</span> push -u origin <span class="token builtin class-name">source</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>前三个用于上传.deploy_git到github的main；<br>后三个用于上传整个源文件夹到github的branch</p><h1 id="更新hexo和hexo插件"><a href="#更新hexo和hexo插件" class="headerlink" title="更新hexo和hexo插件"></a>更新hexo和hexo插件</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用淘宝源的 cnpm 替换 npm</span><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span class="token comment"># 升级 npm</span>cnpm <span class="token function">install</span> -g cnpm     <span class="token comment"># 清除 npm 缓存            </span>cnpm cache clean -f                <span class="token operator">==</span><span class="token operator">=</span>更新 hexo: 进入 blog 目录，执行如下命令<span class="token operator">==</span><span class="token operator">=</span> <span class="token comment"># 更新 package.json 中的 hexo 及个插件版本</span><span class="token comment"># 检查之前安装的插件，都有哪些是可以升级的 </span>cnpm <span class="token function">install</span> -g npm-check<span class="token comment"># 升级系统中的插件           </span>cnpm <span class="token function">install</span> -g npm-upgrade         npm-checknpm-upgrade<span class="token comment"># 更新 hexo 及所有插件</span>cnpm update<span class="token comment"># 确认 hexo 已经更新</span>hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注更新完记得把修改的内容改过来：</p><ol><li>D:\MarshVer’s Blog\node_modules\hexo-deployer-git\lib\parse_config.js中的master改为main（F3查询替换）</li></ol><h1 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h1><p>安装git、nodejs、hexo等等。。然后克隆项目到本地<br>输入下列命令克隆博客必须文件(hexo分支)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> clone https://github.com/marshver/marshver.github.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在clone下来的那个文件夹里面执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli<span class="token function">npm</span> <span class="token function">install</span><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后可以执行如下代码就可以开始你的博客了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
